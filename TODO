This is just a list of TODO items

- Fix the Singleton mess. Ran into issues with the old Singleton class when things weren't synching across different threads. I find this hard to believe, but switched to the SingletonMixin style instead. I hate having to call CLASS.instance() every time. Look into it again. It works now, but seems silly. Further, there are some classes (shared.ConnectionManager, in particular) that are still using the Singleton metaclass.

- Shibboleth integration for login

- Better input abilities for the web interface, e.g., selecting locations from a map, rather than from a dropdown

- Add SDX capabilities

- Add L2 learning switch (prereq for SDX)

- How to handle tables better in the ??? RuleManager? SDXController? I'm thinking RuleManager, as they control where things are going.

- Bootstrapping the OF tables. For instance, there's only one as of this checkin, but there's no proper fallthrough to the next table for SDX capabilities. Local Controller's responsibility?

- Logging update - Most code needs to actually use the logger functionality that's built in.

- Lots of things need __str__() and __repr__() functions either created or updated

- Bandwidth reservation - How to do this? Look at OF1.3 spec.

- Better abstraction between SDX and Local controllers. Right now, it's very close to OpenFlow. If it was abstracted better, writing the UserPolicy children would be much easier. It would require more work on the Local Controllers, but that's not the end of the world. This is a non-trivial design challenge. Match-Action makes some sense, but so does "connect ports 3 and 6 together on VLAN 17". 

- East/West interfaces as a pair of Northbound/southbound interfaces. See NSI, below.

- Integrate with NSI at both the top and bottom. Will likely need a northbound adapter to talk with the REST API.

- What to do if someone's priviledges change? What happens to their existing rules? How to trigger a recalculation of rule? What about recurring rules?

- Tests need to be updated: regressions haven't been performed, so there are a lot of outdated tests still kicking around.

- Replace cPickle with something more secure.


TOPOLOGY MANAGER

- Extend TopologyManager to handle different types of objects, DTNs for instance. These should be able to be added from the REST API: There's a DTN off of the mia switch on port 6, with name "FIU DTN" and max bandwidth of 100Mbps.

- TopologyManager should have a "Type" as part of the different Nodes in the topology. Should it be part of the Manifest or TopologyManager networkx topology specific?

- TopologyManager needs to have a proper database. Use https://dataset.readthedocs.io/en/latest/, as it's being used by the RuleManager now.






RULE MANAGER

- Needs some sort of tracking mechanism for recurrant rules. This may be related to the states discussed above.